# $Id: ~/.shared_env wandsas 2018/07/13
#
# Wandsas's shared environment startup file
#
# This should get run as part of setting up the environment
# of any sh-compatible shell, including non-interactive ones;
# hence it should be kept as fast and portable as possible.
# Note that that means silly things like [ ! -e foo ] rather
# than ! [ -e foo ] ...

# Allow disabling of entire environment suite
[[ -n "$INHERIT_ENV" ]] && return 0

[[ -n "$shared_env_loaded" ]] && return 0

# {{{ Are we interactive?

case "$-" in
  (*i*) shell_interactive=y ;;
    (*) shell_interactive=  ;;
esac

# }}}

# {{{ Loading status

# Default to 1, and treat empty as 0.  This ensures we have an integer.
: ${DEBUG_LOCAL_HOOKS=1}
: ${DEBUG_LOCAL_HOOKS:=0}

sh_load_status () {
  # Find the name of the running shell
  _this_shell=${shell:-${0##*/}}

  # Find the filename of the running script
  if [ -n "$BASH_SOURCE" ]; then
    _this_script="${BASH_SOURCE[0]}"
    # Deduct 1 because array starts at 0, and another 1 because
    # we want to ignore this stack frame (inside sh_load_status)
    _this_script="${BASH_SOURCE[$(( ${#BASH_SOURCE[@]} - 2))]}"
    # Sheesh.  $ZSH_SOURCE[-2], anyone?
  else
    _this_script="$0"
    # Unfortunately in zsh there seems to be no way of determining
    # the currently running file if a function is being run, unless
    # function_argzero is unset :-/
    [ "$_this_script" = sh_load_status ] && _this_script=
    [ "$_this_script" = -zsh ] && _this_script=
  fi
  [ -n "$_this_script" ] && _this_script="[$_this_script]"

  # Leave status printed?

  if [ "$DEBUG_LOCAL_HOOKS" -ge 2 ]; then
    debug="\n"
  fi

  # \e[0K is clear to right
  if [ -n "$shell_interactive" ] && [ "$TERM" != 'dumb' ]; then
    _text="${_this_shell}${_this_script}: $*... "
    _text="${_text//\/home\//~}"
    echo -e -n "\r\e[0K$_text$debug"
  fi
}

# }}}

sh_load_status .shared_env

# {{{ Shared functions

die () {
    local ret="$?"
	printf '\033[1;31mERROR:\033[0m %s\n' "$@" >&2
	exit "$?"
}

einfo () {
	printf '\n\033[1;36m> %s\033[0m\n' "$@" >&2
}

pathmunge () {
    if ! echo $PATH | /bin/egrep -q "(^|:)$1($|:)" ; then
        if [ "$2" = "after" ] ; then
            PATH=$PATH:$1
        else
            PATH=$1:$PATH
        fi
    fi
}

check_com () {
    [ "$#" != 1 ] && die "Usage: ${0##*/} <command>"
    command -v $1 >/dev/null 2>&1 && return 0 || return 1
}

# }}}

# {{{ ZDOTDIR, ZDOTDIRPATH, ZDOTUSER

# See .zshenv

zdotdir=${ZDOTDIR:-$HOME}
ZDOTDIR="$zdotdir"
ZDOT_RUN_HOOKS="$ZDOTDIR/.zsh/functions/run_hooks"
export ZDOTDIR ZDOT_RUN_HOOKS

# Define a search path to be used by run_hooks
if [ "$ZDOTDIR" = "$HOME" ]; then
  ZDOTDIRPATH=$ZDOTDIR
  ZDOTDIRREVPATH=$ZDOTDIR
else
  OTHER_USER=1
  export OTHER_USER
  ZDOTDIRPATH="$ZDOTDIR $HOME"
  ZDOTDIRREVPATH="$HOME $ZDOTDIR"
fi
export ZDOTDIRPATH ZDOTDIRREVPATH

[ -z "$ZDOTUSER" ] && [ -e ~/.zdotuser ] && ZDOTUSER=`cat ~/.zdotuser`
export ZDOTUSER

# }}}

# {{{ freedesktop.org

export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share

# }}}

# {{{ Go

[[ -d "$HOME/.go" ]] && {
  export GOPATH=${GOPATH:-~/.go}
  export GOTMP=/tmp
  pathmunge $GOPATH/bin
}

export GHQ_ROOT=$HOME/repos

# }}}

# {{{ Python libraries

export PYTHONPATH=$HOME/.local/lib64/python3.6/site-packages:/usr/local/lib64/python3.6/site-packages:$PYTHONPATH

[[ -d "$HOME/.local/bin" ]] && pathmunge $HOME/.local/bin

# }}}

# {{{ Java

export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel"

# }}}

# {{{ Rust

[[ -d "$HOME/.cargo/bin" ]]  && pathmunge $HOME/.cargo/bin

# }}}

# {{{ Node.js

[[ -d "$HOME/.npm-global" ]] && {
  export npm_config_prefix=$HOME/.npm-global
  export NODE_PATH=$npm_config_prefix/lib/node_modules
  pathmunge $HOME/.npm-global/bin
}

# }}}

# {{{ Emacs

[[ -d "$HOME/.cask/bin" ]]  && pathmunge $HOME/.cask/bin

# }}}

# {{{ User's bin

pathmunge $HOME/bin

# }}}

# {{{ Running shared hooks
. $ZDOT_RUN_HOOKS .shared/env.d

if [ -n "$shell_interactive" ]; then
  . $ZDOTDIR/.shared_rc
fi

shared_env_loaded=y

# }}}

# vim:fenc=utf-8:ft=sh:ts=2:sts=0:sw=2:et:fdm=marker:foldlevel=0:
